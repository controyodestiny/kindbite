# Generated by Django 5.2.4 on 2025-10-01 10:33

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('foods', '0003_remove_foodlisting_distance_foodlisting_city_and_more'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='PaymentMethod',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('stripe_payment_method_id', models.CharField(max_length=255, unique=True)),
                ('card_brand', models.CharField(blank=True, max_length=50)),
                ('card_last_four', models.CharField(blank=True, max_length=4)),
                ('card_exp_month', models.PositiveIntegerField(blank=True, null=True)),
                ('card_exp_year', models.PositiveIntegerField(blank=True, null=True)),
                ('is_default', models.BooleanField(default=False)),
                ('is_active', models.BooleanField(default=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_methods', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Payment Method',
                'verbose_name_plural': 'Payment Methods',
                'db_table': 'payment_methods',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='PaymentIntent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('stripe_payment_intent_id', models.CharField(max_length=255, unique=True)),
                ('amount', models.PositiveIntegerField(help_text='Amount in cents (UGX)')),
                ('currency', models.CharField(default='ugx', max_length=3)),
                ('status', models.CharField(choices=[('requires_payment_method', 'Requires Payment Method'), ('requires_confirmation', 'Requires Confirmation'), ('requires_action', 'Requires Action'), ('processing', 'Processing'), ('requires_capture', 'Requires Capture'), ('canceled', 'Canceled'), ('succeeded', 'Succeeded'), ('failed', 'Failed')], default='requires_payment_method', max_length=30)),
                ('client_secret', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payment_intents', to=settings.AUTH_USER_MODEL)),
                ('payment_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='payments.paymentmethod')),
            ],
            options={
                'verbose_name': 'Payment Intent',
                'verbose_name_plural': 'Payment Intents',
                'db_table': 'payment_intents',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Transaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('transaction_type', models.CharField(choices=[('food_purchase', 'Food Purchase'), ('kindcoins_purchase', 'KindCoins Purchase'), ('refund', 'Refund'), ('withdrawal', 'Withdrawal')], max_length=20)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('completed', 'Completed'), ('failed', 'Failed'), ('cancelled', 'Cancelled'), ('refunded', 'Refunded')], default='pending', max_length=20)),
                ('amount', models.PositiveIntegerField(help_text='Amount in cents (UGX)')),
                ('currency', models.CharField(default='ugx', max_length=3)),
                ('fee_amount', models.PositiveIntegerField(default=0, help_text='Processing fee in cents')),
                ('net_amount', models.PositiveIntegerField(help_text='Net amount after fees in cents')),
                ('stripe_charge_id', models.CharField(blank=True, max_length=255)),
                ('stripe_transfer_id', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField(blank=True)),
                ('failure_reason', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('food_reservation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='foods.foodreservation')),
                ('payment_intent', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='transaction', to='payments.paymentintent')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='transactions', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'Transaction',
                'verbose_name_plural': 'Transactions',
                'db_table': 'transactions',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Refund',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('stripe_refund_id', models.CharField(max_length=255, unique=True)),
                ('amount', models.PositiveIntegerField(help_text='Refund amount in cents')),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('succeeded', 'Succeeded'), ('failed', 'Failed'), ('canceled', 'Canceled')], default='pending', max_length=20)),
                ('reason', models.CharField(blank=True, max_length=100)),
                ('description', models.TextField(blank=True)),
                ('transaction', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='refunds', to='payments.transaction')),
            ],
            options={
                'verbose_name': 'Refund',
                'verbose_name_plural': 'Refunds',
                'db_table': 'refunds',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='KindCoinsTransaction',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('is_deleted', models.BooleanField(default=False)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('transaction_type', models.CharField(choices=[('earned', 'Earned'), ('spent', 'Spent'), ('purchased', 'Purchased'), ('refunded', 'Refunded'), ('bonus', 'Bonus'), ('penalty', 'Penalty')], max_length=20)),
                ('amount', models.IntegerField(help_text='Amount of KindCoins (can be negative)')),
                ('balance_after', models.PositiveIntegerField(help_text="User's balance after this transaction")),
                ('description', models.TextField(blank=True)),
                ('metadata', models.JSONField(blank=True, default=dict)),
                ('food_reservation', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='foods.foodreservation')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='kindcoins_transactions', to=settings.AUTH_USER_MODEL)),
                ('payment_transaction', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='payments.transaction')),
            ],
            options={
                'verbose_name': 'KindCoins Transaction',
                'verbose_name_plural': 'KindCoins Transactions',
                'db_table': 'kindcoins_transactions',
                'ordering': ['-created_at'],
            },
        ),
    ]
